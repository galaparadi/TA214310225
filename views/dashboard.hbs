<nav class="{{webconf.color.primary}}">
	<div class="nav-wrapper">
		<div class="brand-logo left" id="{{data.workspace._id}}" onclick="fileDashboard()" href="" style="margin: 5px">
			<a href="#">{{data.workspace.name}}</a>
		</div>
		<ul class="right">
			<li><a href="#live-chat"><i class="material-icons">chat</i></a></li>
			<li><a><i class="material-icons">people</i></a></li>
			<li><a href="#settings"><i class="material-icons">settings</i></a></li>
			<li><a data-target="dropdown1" class="dropdown-trigger" id="avatar" href=""><img
						class="circle responsive-img"
						src="https://ui-avatars.com/api/?name={{data.curuser.username}}"></a></li>
		</ul>
	</div>
</nav>
<ul id='dropdown1' class='dropdown-content'>
	<li style="padding : 14px 16px; width: 200px"><b>{{data.curuser.username}}</b></li>
	<li class="divider" tabindex="-1"></li>
	<li><a href="/"><i class="material-icons {{webconf.color.primaryText}}">home</i>home</a></li>
	<li><a href="/u/auth/logout"><i class="material-icons {{webconf.color.primaryText}}">exit_to_app</i>logout</a></li>
</ul>

<div class="row">
	<div id="content" class="col l9"></div>
	<div id="users-list" class="col l3">
		<div class="card">
			<div class="card-content">
				<span class="card-title">Friends</span>
				<p>Contributor</p>
			</div>
			<ul class="collection flush">
				{{#each data.users}}
				<li class="collection-item avatar chat-users" data-username="{{this.username}}">
					<div class="badged-circle {{#if this.online}} online {{/if}}">
						<img class="circle" src="https://ui-avatars.com/api/?name={{this.username}}" alt="avatar">
					</div>
					<span class="title">{{this.username}}</span>
					<p class="truncate"><span class="badge"></span><span class="message">lorem</span></p>
				</li>
				{{/each}}
			</ul>
		</div>
	</div>
</div>

<!-- sidenav component -->
<ul id="slide-out" class="sidenav">
	<li>
		<div class="user-view">
			<div class="background">
				<img src="https://materializecss.com/images/office.jpg">
			</div>
			<a href="#user"><img class="circle" src="https://materializecss.com/images/yuna.jpg"></a>
			<a href="#name"><span class="white-text name">John Doe</span></a>
			<a href="#email"><span class="white-text email">jdandturk@gmail.com</span></a>
		</div>
	</li>
	<li><a href="">New Document</a></li>
	<li><a href="">Invite User</a></li>
	<li><a href="">Invite User</a></li>
	<li class="no-padding">
		<ul class="collapsible collapsible-accordion">
			<li>
				<a class="collapsible-header">Dropdown<i class="material-icons">arrow_drop_down</i></a>
				<div class="collapsible-body">
					<ul>
						<li><a href="#!">dd</a></li>
						<li><a href="#!">Second</a></li>
						<li><a href="#!">Third</a></li>
						<li><a href="#!">Fourth</a></li>
					</ul>
				</div>
			</li>
		</ul>
	</li>
	<li>dudung lahs</li>
</ul>
<ul id="slide-file" class="sidenav">
	<li id="new-document"><a>New Document</a></li>
	<li>
		<div class="divider"></div>
	</li>
	<li id="file-dashboard"><a>file</a></li>
</ul>
<ul id="slide-contributor" class="sidenav">
	<li><a href="/">{{data.curuser.username}}</a></li>
	<li>
		<div class="divider"></div>
	</li>
	<li><a>Invite</a></li>
	<li id="contributor"><a>contributor list</a></li>
	<li id="arrayer"><a>arrayer</a></li>
</ul>
<!-- 
<div class="fixed-action-btn">
	<a class="btn-floating btn-large red">
		<i class="large material-icons">mode_edit</i>
	</a>
	<ul>
			<li><a href="#" data-target="slide-contributor" class="btn-floating sidenav-trigger"><i class="material-icons">account_box</i></a></li>
			<li><a href="#" data-target="slide-file" class="btn-floating sidenav-trigger"><i class="material-icons">insert_drive_file</i></a></li>
			<li><a href="#" data-target="slide-out" class="btn-floating sidenav-trigger"><i class="material-icons">folder</i></a></li>
			<li><a href="#" data-target="slide-out" class="btn-floating sidenav-trigger"><i class="material-icons">group</i></a></li>
			<li><a href="#" data-target="slide-out" class="btn-floating sidenav-trigger"><i class="material-icons">link</i></a></li>
			<li><a href="#" data-target="slide-out" class="btn-floating sidenav-trigger"><i class="material-icons">share</i></a></li>
			<li><a href="#" data-target="slide-out" class="btn-floating sidenav-trigger"><i class="material-icons">insert_chart</i></a></li>
			<li><a href="#" data-target="slide-out" class="btn-floating sidenav-trigger"><i class="material-icons">settings</i></a></li>
		</ul>
</div>
-->
<script type="text/javascript">


	let cookies = document.cookie.split(';').reduce((obj, cookie) => {
		let [key, value] = cookie.split('=');
		let newObj = {};
		newObj[key] = decodeURIComponent(value);
		return { ...obj, ...newObj }
	}, {})

	if (cookies.errAddDocument) {
		M.toast({ html: cookies.errAddDocument })
	}
	if (cookies.addDocument) {
		M.toast({ html: cookies.addDocument })
	}

	let workspaceName = document.title;
	const hashLocation = {
		'#live-chat': () => liveChat(),
		'#settings': () => setting(),
		'#new-document': () => newDocument(),
	}

	function loadFilePicker() {
		document.querySelector('input[name="document"]').click();
		document.querySelector('input[name="upload-method"]').value = 'file';
	}

	function loadDropboxPicker() {
		options = {
			success: function (files) {
				console.log(files)
				//document.querySelector('form>input[name="drive-id"]').value = fileId;
				document.querySelector('input[name="filename"]').value = files[0].name;
				document.querySelector('input[name="filename"]').focus();
				document.querySelector('input[name="drive-id"]').value = files[0].id;
				//document.querySelector('input[name="mime-type"]').value = data.docs[0].mimeType;
				document.querySelector('input[name="upload-method"]').value = 'dropbox';
				window.open("https://www.dropbox.com/oauth2/authorize?response_type=token&client_id=h33ulr7xxcdrbbt&redirect_uri=http://localhost/x/dropbox-auth", "hello", "width=450,lenght=700");
			},
			cancel: function () {

			},
		};
		Dropbox.choose(options);
	}

	function setting() {
		$("#content").html('<h1>Coming Soon</h1>');
	}

	function liveChat() {
		$.post("/x/live-chat", {
			username: '{{data.curuser.username}}',
			workspacename: '{{data.workspace.name}}',
		}, (data, status) => {
			$("#content").html(data);
		})
	}

	function newDocument() {
		$.post("/x/new-document", {
			ObjectId: $(".brand-logo").attr("id"),
			workspacename: $(".brand-logo>a").text(),
			authorLevel: document.body.dataset.level,
		}, function (data, status) {
			$("#content").html(data);
			var elems = document.querySelectorAll('.dropdown-file-trigger');
			var instances = M.Dropdown.init(elems);
			M.Sidenav.getInstance(document.getElementById('slide-file')).close();
		});
	}

	function fileDashboard() {
		$.post("/x/file-dashboard", {
			ObjectId: $(".brand-logo").attr("id"),
			workspacename: document.querySelector(".brand-logo").innerText,
		}, function (data, status) {
			$("#content").html(data);
			M.Sidenav.getInstance(document.getElementById('slide-file')).close();
		});
	}

	function documentDetail(id) {
		$.post("http://localhost/x/document-details", {
			id: id,
			workspacename: $(".brand-logo>a").text(),
		}, function (data, status) {
			window.location.hash = `#file-id=${id}`;
			window.history.replaceState({ state: window.location.hash }, "", window.location.hash);
			$("#content").html(data);
		});
	}

	window.onpopstate = function (event) {
		//console.log(JSON.stringify(event.state));
	}

	window.onhashchange = function () {
		//console.log("hey " + location.hash)
		window.history.replaceState({ state: window.location.hash }, "", window.location.hash);
		if (location.hash === '#live-chat') {
			liveChat();
		} else if (location.hash === '#settings') {
			setting();
		} else if (location.hash === '#new-document') {
			newDocument();
		} else if (location.hash.match(/#file-id=\w+/)) {
			documentDetail(location.hash.replace('#file-id=', ''))
		} else {
			document.title = workspaceName;
			fileDashboard();
		}
	}

	$(document).ready(function () {
		let elems = document.querySelectorAll('.sidenav');
		let elemsSide = document.querySelectorAll('.collapsible');
		let instances = M.Sidenav.init(elems);
		let instancesSide = M.Collapsible.init(elemsSide);
		let dropdown = M.Dropdown.init(document.querySelectorAll('.dropdown-trigger'), {
			constrainWidth: false,
			alignment: "right",
		});

		if (!window.location.pathname.split('/')[2]) { //if url only base/{workspace}
			if (location.hash === "#live-chat") {
				$.post("/x/live-chat", {
					username: '{{data.curuser.username}}',
					workspacename: '{{data.workspace.name}}',
				}, (data, status) => {
					$("#content").html(data);
				})
			} else if (location.hash === '#settings') {
				setting();
			} else if (location.hash === '#new-document') {
				newDocument();
			} else if (location.hash.match(/#file-id=\w+/)) {
				documentDetail(location.hash.replace('#file-id=', ''))
			} else {
				fileDashboard();
			}
		} else {
			let docId = window.location.pathname.split('/')[2];
			$.post("/x/document-details", {
				id: docId,
				workspacename: '{{data.workspace.name}}',
			}, function (data, status) {
				$("#content").html(data);
			});
		}

		function userListItem({ username }) {
			return `<li class="collection-item avatar chat-users" data-username="{{username}}">
					<div class="badged-circle online">
						<img class="circle" src="https://ui-avatars.com/api/?name={{username}}" alt="avatar">
					</div>
					<span class="title">{{username}}</span>
					<p class="truncate"><span class="badge"></span><span class="message">lorem</span></p>
				</li>`
		}

		function renderUserList() {
			//TODO: render user list

		}

		function renderSendChat() {
			let chatText = `<div class="chat-message right">
            <img class="circle"
              src="//cdn.shopify.com/s/files/1/1775/8583/t/1/assets/portrait2.jpg?v=15342908036415923195" alt="avatar">
            ${message}
          </div>`;
			$('.chat-message:last-child').after(chatText)
			$('.chat-container').scrollTop(document.querySelector('.chat-container').scrollHeight - document.querySelector('.chat-container').clientHeight)
		}

		function renderReceiveChat() {
			let chatText = `<div class="chat-message left">
            <img class="circle"
              src="//cdn.shopify.com/s/files/1/1775/8583/t/1/assets/portrait2.jpg?v=15342908036415923195" alt="avatar">
            ${message}
          </div>`;
			$('.chat-message:last-child').after(chatText)
			$('.chat-container').scrollTop(document.querySelector('.chat-container').scrollHeight - document.querySelector('.chat-container').clientHeight)
		}

		function getChats() {
			$.post("http://localhost/x/pull-chats",
				{
					username: sender,
					workspacename: workspace,
					receiver: receiver,
				}, (data) => {
					renderChats(data, sender);
				});
		}

		function renderChats() {
			$('.chat-wrapper').html('<div class="chat-message"></div>');
			data.forEach(item => {
				if (item.chat.sender === username) {
					renderSendChat(item.chat.message);
				} else {
					renderReceiveChat(item.chat.message)
				}
			});
			$('.chat-message:first-child').remove();
		}


		socket.on('who-online', ({ username, init }) => {
			console.log(username);
			$(`.chat-users[data-username="${username}"]>.badged-circle`).addClass('online');
			socket.emit('im-online', { username: $('#dropdown1>li:first-child').text(), init });
		});
		socket.on('leaving', username => {
			$(`.chat-users[data-username="${username}"]>.badged-circle`).removeClass('online');
		})
		socket.on('someone-ask-private-chat', msg => {
			if (msg.dest === username) {
				socket.emit('receive-private-chat', msg);
			}
		});
		socket.on('receive-private-chat', msg => {
			if (msg.dest === $('#chat-username').text())
				$('button').val(msg.destId);
		});
		socket.on('private-chat', (msg, sender) => {
			if (sender === $('#chat-username').text()) {
				renderReceiveChat(msg);
				$('.avatar[data-username="dudung"]>p>.message').text(msg)
			} else {
				let counter = $(`.avatar[data-username="${sender}"]>p>.badge`).text();
				counter++
				$(`.avatar[data-username="${sender}"]>p>.badge`).addClass('new');
				$(`.avatar[data-username="${sender}"]>p>.badge`).text(counter);
				$(`.avatar[data-username="${sender}"]>p>.message`).text(msg)
			}
		});
		socket.emit('im-online', { sender: $('#dropdown1>li:first-child').text(), init: 3 });
	});
</script>